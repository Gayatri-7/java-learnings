//Greedy approach
public class Main{
    public static int maxProduct(int[] arr){
        int maxA=Integer.MIN_VALUE;
        int maxB=Integer.MIN_VALUE;
        int maxC=Integer.MIN_VALUE;
        
       int minA=Integer.MAX_VALUE;
       int minB=Integer.MAX_VALUE;
       int n=arr.length;
       int maxp=Integer.MIN_VALUE;
       //to find the first max,second max,third max
       for(int i=0;i<n;i++){
           if (arr[i]>maxA){   
                maxC=maxB;
                maxB=maxA;
                maxA=arr[i];
               
           }
           else if(arr[i]>maxB){   //maxA se nai par maxB se bada ho to ye
                 maxC= maxB;
                 maxB=arr[i];
               }
            else if (arr[i]>maxC){
                maxC=arr[i];
            }
           
           
           
           if(arr[i]<minA){
               minB=minA;
               minA=arr[i];
           }
           else if(arr[i]<minB){
               minB=arr[i];
           }
       }
           
           maxp=Math.max(maxA*maxB*maxC,minA*minB*maxA);
           return maxp;
       
       
       
    }
    public static void main (String[] args) {
        int arr[]={-10, -3, 5, 6, -20};
        int m=maxProduct(arr);
        System.out.print(m);
    }
}