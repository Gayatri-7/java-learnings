//Bucket Sort

import java.util.Arrays;
import java.util.List;
import java.util.LinkedList;
import java.util.Collections;


public class BucketSort{
    public static void main(String[] args) {
        int noOfBuckets=5;
        int arr[]={11,9,21,8,17,19,13,1,2};
        int globalMax=Arrays.stream(arr).max().getAsInt();
        int globalMin=Arrays.stream(arr).min().getAsInt();

        int range=globalMax-globalMin;
        int bucketRange=(int)Math.ceil((double)range/noOfBuckets);
        List<Integer> buckets[]=new List[noOfBuckets];
        
        for(int i=0;i<noOfBuckets;i++){
            buckets[i]=new LinkedList<>();
        }
        for(int num:arr){
            buckets[hash(num,bucketRange,noOfBuckets,globalMin)].add(num);
        }

        for(List<Integer> bucket:buckets)
        {
            Collections.sort(bucket);
        }

        int index=0;
        for(List<Integer> bucket:buckets ){
            for(int n: bucket){
                arr[index]=n;
                index++;
            }
        }
        System.out.print(Arrays.toString(arr));

        
    }
    public static int hash(int num,int bucketRange,int noOfBuckets,int globalMin){
         return Math.min((num-globalMin)/bucketRange,noOfBuckets-1);
        };
}
